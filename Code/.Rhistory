for(k in 1:4)
{
MTE<-c(MTE,mte[[res]][[k]][1,])
MTE_up<-c(MTE_up,mte[[res]][[k]][2,])
MTE_low<-c(MTE_low,mte[[res]][[k]][3,])
}
}
df <- data.frame(Grid=rep(seq(0.01,0.99,length=100),12),
MTE = MTE,
MTE_low = MTE_low,
MTE_up = MTE_up,
ruralgender = rep(rep(c("Rural Female",
"Rural Male",
"Urban Female",
"Urban Male"), each=100), 3),
measure = rep(c("Confidence", "Anxiety", "Desperation"), each=400))
df$measure.f=factor(df$measure,levels=c("Confidence","Anxiety","Desperation"))
p4<-ggplot(df, aes(Grid)) +
# Draw MTE lines, as well as the Confidence Interval
geom_line(aes(y=MTE),size=0.9,linetype="solid") +
geom_line(aes(y=MTE_up),size=0.9,linetype="dashed") +
geom_line(aes(y=MTE_low),size=0.9,linetype="dashed") +
# Lay out plots in a grid fomat, with "measure" used as the vertical
# facet group and "ruralgender" used as the horizontal facet group
facet_grid(measure.f~ruralgender) +
# Add horizontal lines at 0
geom_hline(yintercept=0, linetype="dotdash",alpha=0.5) +
labs(title = "", x = "", y="",
shape="", color="") +
# Choose a grayscale palette
scale_color_grey() +
# Remove the default grey background
theme_bw() +
# Customizations. Center plot title, and remove background lines
theme(plot.title = element_text(hjust = 0.5),
panel.spacing.x = unit(1, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="none")
#pdf(file = "Expected_MTE.pdf",height=6,width=8.5)
p4
#dev.off()
#Produce Figure 5 in the paper.
load("Figure5.RData")
library(ggplot2)
df <- data.frame(
#Indicate Whether is point estimation or bound
type=c(rep("0",12),rep("1",12),rep("95",48)),
#Indicate Whether is TT or PRTE
tt_prte=c(
rep(1,12),rep(2,12),rep(1,12),rep(2,12),
rep(1,12),rep(2,12)
),
limy.up=1,
limy.down=c(rep(0,24),rep(NA,48)),
pairs=c(
1:24,1:24,1:24),
#Grid of X to Plot on
Grid=rep(
c(rep(c(1,2,3,4),3),rep(c(1,2,3,4),3)+0.3),3),
#Values of Point
#Point Estimation for the Estimands
Values=c(
c(TAU[,4],TAU[,1]),
#Upper Bound
c(TAU[,6],TAU[,3]),
#Lower Bound
c(TAU[,5],TAU[,2])),
#Indicate Whether is tau,rho,eta
name=c(rep("tau",72)),
#Measures Names
measure = rep(rep(c("Confidence", "Anxiety", "Desperation"), each=4),6))
#df$name.f=factor(df$name,levels=c(expression(tau),expression(rho),expression(eta)))
df$measure.f=factor(df$measure,levels=c("Confidence","Anxiety","Desperation"))
df$type.f=factor(df$type,levels=c(0,1,95))
p5<-ggplot(df, aes(x=Grid, y=Values,group=pairs)) +
# Add points, whose color and shape varies with the "variable" column
geom_point(data=df,aes(shape=type.f),size=2, alpha=0.9) +
geom_line(aes(x=Grid,y=Values),linetype="dashed")+
scale_shape_manual(values=c(16,15,32))+
# Provide breakpoints and respective labelings for the x-axis
scale_x_continuous(breaks=c(1.15,2.15,3.15,4.15), labels=c("Rural_F", "Rural_M", "Urban_F","Urban_M")) +
# Lay out plots in a grid fomat, with "measure" used as the vertical
# facet group and "ruralgender" used as the horizontal facet group
facet_grid(~measure.f,scale="free",labeller = label_parsed) +
# Add horizontal lines at 0
geom_hline(aes(yintercept= 0), linetype="dotdash")+
# Add labels. Note that to rename the legend, you have to rename both the
# "shape" and the "color" variables.
labs(title = "", x = "", y="",
shape="") +
# Choose a grayscale palette
scale_color_grey() +
# Remove the default grey background
theme_bw() +
# Customizations. Center plot title, and remove background lines
theme(plot.title = element_text(hjust = 0.5),
panel.spacing.x = unit(1, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="none")
pdf("overalleffects.pdf", width = 8.5, height = 3)
p5
dev.off()
p5
setwd("C:/Users/Shuxi ZENG/Dropbox/Third Year/OCP_Revise/Revision/OCP_Rev_112519/Code_Readme")
#Produce Figure 8
load("Figure3.RData")
load("Figure5.RData")
par(mfrow=c(3,1), mar = c(2,4,1.5,0))
#Result by method*subgroup*measure*(est,low,up)
ols=as.vector(t(T_MATRIX[c(1,6,11,16),]))
match=as.vector(t(T_MATRIX[c(1,6,11,16)+1,]))
ipw=as.vector(t(T_MATRIX[c(1,6,11,16)+2,]))
dr=as.vector(t(T_MATRIX[c(1,6,11,16)+3,]))
iv=as.vector(t(T_MATRIX[c(1,6,11,16)+4,]))
tau=as.vector(t(TAU[,c(4,5,6)]))
values<-c(ols,iv,tau)
method=c(rep("OLS",36),rep("2SLS",36),rep("Bayesian LIV",36))
#Grid for X
xgrid=seq(1,7,length=3)
grid=c(rep(xgrid[1],each=36),rep(xgrid[2],each=36),
rep(xgrid[3],each=36))
#Shape of Points
type=c(rep(c(6,1,2),12),rep(c(7,1,2),12),rep(c(8,1,2),12))
#Group to Draw Liness
pair=as.vector(t(cbind(seq(1,143,length=36),seq(2,144,length=36),
seq(2,144,length=36))))
#Measures
measure=rep(rep(c("Confidence","Anxiety","Desperation"),each=12),3)
#Subgroup
ruralgroup=rep(rep(c("Rural Female","Rural Male",
"Urban Female","Urban Male"),each=3),9)
#Transform into Data frame
df<- data.frame(
Grid=grid,Values=values,type=as.factor(type),pairs=pair,
measure=factor(measure,levels=c("Confidence","Anxiety","Desperation")),
ruralgroup=factor(ruralgroup,levels=c("Rural Female","Rural Male",
"Urban Female","Urban Male"))
)
p7<-ggplot(df, aes(x=Grid, y=Values,group=pairs)) +
# Add points, whose color and shape varies with the "variable" column
geom_point(data=df,aes(shape=type),size=2, alpha=0.9) +
geom_line(aes(x=Grid,y=Values),linetype="dashed")+
scale_x_continuous(limits = c(0,8))+
scale_shape_manual(values=c(32,32,1,9,12),
labels=c("","","OLS","2SLS","Bayesian LIV"))+
# Provide breakpoints and respective labelings for the x-axis
#scale_x_continuous(breaks=xgrid, labels=c("OLS","MATCH","IPW","DR","2SLS","BAYES"))+
# Lay out plots in a grid fomat, with "measure" used as the vertical
# facet group and "ruralgender" used as the horizontal facet group
facet_grid(measure~ruralgroup) +
# Add horizontal lines at 0
geom_hline(aes(yintercept= 0), linetype="dotdash",alpha=0.5)+
# Add labels. Note that to rename the legend, you have to rename both the
# "shape" and the "color" variables.
labs(title = "", x = "", y="",
shape="") +
# Choose a grayscale palette
scale_color_grey() +
# Remove the default grey background
theme_bw() +
# Customizations. Center plot title, and remove background lines
theme(plot.title = element_text(hjust = 0.5),
panel.spacing.x = unit(0, "lines"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position="top",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#
pdf("OtherMethod.pdf",height = 6,width=8.5)
p7
dev.off()
setwd("C:/Users/Shuxi ZENG/Dropbox/Third Year/OCP_Revise/Revision/OCP_Rev_112519/Code_Readme")
#Produce Figure 8
load("Figure3.RData")
load("Figure5.RData")
par(mfrow=c(3,1), mar = c(2,4,1.5,0))
#Result by method*subgroup*measure*(est,low,up)
ols=as.vector(t(T_MATRIX[c(1,6,11,16),]))
match=as.vector(t(T_MATRIX[c(1,6,11,16)+1,]))
ipw=as.vector(t(T_MATRIX[c(1,6,11,16)+2,]))
dr=as.vector(t(T_MATRIX[c(1,6,11,16)+3,]))
iv=as.vector(t(T_MATRIX[c(1,6,11,16)+4,]))
tau=as.vector(t(TAU[,c(4,5,6)]))
values<-c(ols,iv,tau)
method=c(rep("OLS",36),rep("2SLS",36),rep("Bayesian LIV",36))
#Grid for X
xgrid=seq(1,7,length=3)
grid=c(rep(xgrid[1],each=36),rep(xgrid[2],each=36),
rep(xgrid[3],each=36))
#Shape of Points
type=c(rep(c(6,1,2),12),rep(c(7,1,2),12),rep(c(8,1,2),12))
#Group to Draw Liness
pair=as.vector(t(cbind(seq(1,143,length=36),seq(2,144,length=36),
seq(2,144,length=36))))
#Measures
measure=rep(rep(c("Confidence","Anxiety","Desperation"),each=12),3)
#Subgroup
ruralgroup=rep(rep(c("Rural Female","Rural Male",
"Urban Female","Urban Male"),each=3),9)
#Transform into Data frame
df<- data.frame(
Grid=grid,Values=values,type=as.factor(type),pairs=pair,
measure=factor(measure,levels=c("Confidence","Anxiety","Desperation")),
ruralgroup=factor(ruralgroup,levels=c("Rural Female","Rural Male",
"Urban Female","Urban Male"))
)
p7<-ggplot(df, aes(x=Grid, y=Values,group=pairs)) +
# Add points, whose color and shape varies with the "variable" column
geom_point(data=df,aes(shape=type),size=2, alpha=0.9) +
geom_line(aes(x=Grid,y=Values),linetype="dashed")+
scale_x_continuous(limits = c(0,8))+
scale_shape_manual(values=c(32,32,1,9,12),
labels=c("","","OLS","2SLS","Bayesian LIV"))+
# Provide breakpoints and respective labelings for the x-axis
#scale_x_continuous(breaks=xgrid, labels=c("OLS","MATCH","IPW","DR","2SLS","BAYES"))+
# Lay out plots in a grid fomat, with "measure" used as the vertical
# facet group and "ruralgender" used as the horizontal facet group
facet_grid(measure~ruralgroup) +
# Add horizontal lines at 0
geom_hline(aes(yintercept= 0), linetype="dotdash",alpha=0.5)+
# Add labels. Note that to rename the legend, you have to rename both the
# "shape" and the "color" variables.
labs(title = "", x = "", y="",
shape="") +
# Choose a grayscale palette
scale_color_grey() +
# Remove the default grey background
theme_bw() +
# Customizations. Center plot title, and remove background lines
theme(plot.title = element_text(hjust = 0.5),
panel.spacing.x = unit(0, "lines"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position="top",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#
pdf("OtherMethod.pdf",height = 6,width=8.5)
p7
dev.off()
setwd("C:/Users/Shuxi ZENG/Dropbox/Third Year/OCP_Revise/Revision/OCP_Rev_112519/Code_Readme")
#Produce Figure 5 in the paper.
load("Figure3.RData")
library(ggplot2)
df <- data.frame(
#Indicate Whether is point estimation or bound
type=c(rep("0",12),rep("1",12),rep("95",48)),
#Indicate Whether is TT or PRTE
tt_prte=c(
rep(1,12),rep(2,12),rep(1,12),rep(2,12),
rep(1,12),rep(2,12)
),
limy.up=1,
limy.down=c(rep(0,24),rep(NA,48)),
pairs=c(
1:24,1:24,1:24),
#Grid of X to Plot on
Grid=rep(
c(rep(c(1,2,3,4),3),rep(c(1,2,3,4),3)+0.3),3),
#Values of Point
#Point Estimation for the Estimands
Values=c(
c(TAU[,4],TAU[,1]),
#Upper Bound
c(TAU[,6],TAU[,3]),
#Lower Bound
c(TAU[,5],TAU[,2])),
#Indicate Whether is tau,rho,eta
name=c(rep("tau",72)),
#Measures Names
measure = rep(rep(c("Confidence", "Anxiety", "Desperation"), each=4),6))
#df$name.f=factor(df$name,levels=c(expression(tau),expression(rho),expression(eta)))
df$measure.f=factor(df$measure,levels=c("Confidence","Anxiety","Desperation"))
df$type.f=factor(df$type,levels=c(0,1,95))
p5<-ggplot(df, aes(x=Grid, y=Values,group=pairs)) +
# Add points, whose color and shape varies with the "variable" column
geom_point(data=df,aes(shape=type.f),size=2, alpha=0.9) +
geom_line(aes(x=Grid,y=Values),linetype="dashed")+
scale_shape_manual(values=c(16,15,32))+
# Provide breakpoints and respective labelings for the x-axis
scale_x_continuous(breaks=c(1.15,2.15,3.15,4.15), labels=c("Rural_F", "Rural_M", "Urban_F","Urban_M")) +
# Lay out plots in a grid fomat, with "measure" used as the vertical
# facet group and "ruralgender" used as the horizontal facet group
facet_grid(~measure.f,scale="free",labeller = label_parsed) +
# Add horizontal lines at 0
geom_hline(aes(yintercept= 0), linetype="dotdash")+
# Add labels. Note that to rename the legend, you have to rename both the
# "shape" and the "color" variables.
labs(title = "", x = "", y="",
shape="") +
# Choose a grayscale palette
scale_color_grey() +
# Remove the default grey background
theme_bw() +
# Customizations. Center plot title, and remove background lines
theme(plot.title = element_text(hjust = 0.5),
panel.spacing.x = unit(1, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="none")
pdf("overalleffects.pdf", width = 8.5, height = 3)
p5
dev.off()
#Produce Figure 8
load("Figure3.RData")
load("Figure5.RData")
par(mfrow=c(3,1), mar = c(2,4,1.5,0))
#Result by method*subgroup*measure*(est,low,up)
ols=as.vector(t(T_MATRIX[c(1,6,11,16),]))
match=as.vector(t(T_MATRIX[c(1,6,11,16)+1,]))
ipw=as.vector(t(T_MATRIX[c(1,6,11,16)+2,]))
dr=as.vector(t(T_MATRIX[c(1,6,11,16)+3,]))
iv=as.vector(t(T_MATRIX[c(1,6,11,16)+4,]))
tau=as.vector(t(TAU[,c(4,5,6)]))
values<-c(ols,iv,tau)
method=c(rep("OLS",36),rep("2SLS",36),rep("Bayesian LIV",36))
#Grid for X
xgrid=seq(1,7,length=3)
grid=c(rep(xgrid[1],each=36),rep(xgrid[2],each=36),
rep(xgrid[3],each=36))
#Shape of Points
type=c(rep(c(6,1,2),12),rep(c(7,1,2),12),rep(c(8,1,2),12))
#Group to Draw Liness
pair=as.vector(t(cbind(seq(1,143,length=36),seq(2,144,length=36),
seq(2,144,length=36))))
#Measures
measure=rep(rep(c("Confidence","Anxiety","Desperation"),each=12),3)
#Subgroup
ruralgroup=rep(rep(c("Rural Female","Rural Male",
"Urban Female","Urban Male"),each=3),9)
#Transform into Data frame
df<- data.frame(
Grid=grid,Values=values,type=as.factor(type),pairs=pair,
measure=factor(measure,levels=c("Confidence","Anxiety","Desperation")),
ruralgroup=factor(ruralgroup,levels=c("Rural Female","Rural Male",
"Urban Female","Urban Male"))
)
p7<-ggplot(df, aes(x=Grid, y=Values,group=pairs)) +
# Add points, whose color and shape varies with the "variable" column
geom_point(data=df,aes(shape=type),size=2, alpha=0.9) +
geom_line(aes(x=Grid,y=Values),linetype="dashed")+
scale_x_continuous(limits = c(0,8))+
scale_shape_manual(values=c(32,32,1,9,12),
labels=c("","","OLS","2SLS","Bayesian LIV"))+
# Provide breakpoints and respective labelings for the x-axis
#scale_x_continuous(breaks=xgrid, labels=c("OLS","MATCH","IPW","DR","2SLS","BAYES"))+
# Lay out plots in a grid fomat, with "measure" used as the vertical
# facet group and "ruralgender" used as the horizontal facet group
facet_grid(measure~ruralgroup) +
# Add horizontal lines at 0
geom_hline(aes(yintercept= 0), linetype="dotdash",alpha=0.5)+
# Add labels. Note that to rename the legend, you have to rename both the
# "shape" and the "color" variables.
labs(title = "", x = "", y="",
shape="") +
# Choose a grayscale palette
scale_color_grey() +
# Remove the default grey background
theme_bw() +
# Customizations. Center plot title, and remove background lines
theme(plot.title = element_text(hjust = 0.5),
panel.spacing.x = unit(0, "lines"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position="top",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#
pdf("OtherMethod.pdf",height = 6,width=8.5)
p7
dev.off()
#Codes Below Produce Figure 1 in the Paper
load("Figure1.RData")
pdf("Firstage_Prob_Quantile.pdf",height=3,width= 6)
par(mfrow=c(1, 1),mar = c(2,4.5,0,0))
#Index to Draw Points Along the Line
index=seq(1,1000,by=100)
#Create a Grid of Quantile for the IV
z.quantile=seq(0,1,length=1000)
plot(z.quantile,newz.p[,1],ylim=range(newz.p),type='l',lty=1,
lwd=2,xlab="Quantile of the IFPPR",
ylab="Probability of Being the Only Child",
main="",
yaxt = "n", xaxt = "n", axes = F)
axis(1, at = seq(0, 1, 0.1),
labels = seq(0, 1, 0.1))
axis(2, at = c(0, 0.1, 0.3, 0.5, 0.7),
labels = c("0", ".1", ".3", ".5", ".7"))
points(z.quantile[index],newz.p[index,1],pch=1,cex=1)
lines(z.quantile,newz.p[,2],type='l',lty=1,lwd=2)
points(z.quantile[index],newz.p[index,2],pch=2,cex=1)
lines(z.quantile,newz.p[,3],type='l',lty=1,lwd=2)
points(z.quantile[index],newz.p[index,3],pch=5,cex=1)
lines(z.quantile,newz.p[,4],type='l',lty=1,lwd=2)
points(z.quantile[index],newz.p[index,4],pch=6,cex=1)
legend("topleft",legend=Subgroup.name,lty=1,pch=c(1,2,5,6),cex=0.7)
dev.off()
setwd("C:/Users/Shuxi ZENG/Dropbox/Third Year/OCP_Revise/Code_Readme")
#Codes Below Produce Figure 1 in the Paper
load("Figure1.RData")
pdf("Firstage_Prob_Quantile.pdf",height=3,width= 6)
par(mfrow=c(1, 1),mar = c(2,4.5,0,0))
#Index to Draw Points Along the Line
index=seq(1,1000,by=100)
#Create a Grid of Quantile for the IV
z.quantile=seq(0,1,length=1000)
plot(z.quantile,newz.p[,1],ylim=range(newz.p),type='l',lty=1,
lwd=2,xlab="Quantile of the IFPPR",
ylab="Probability of Being the Only Child",
main="",
yaxt = "n", xaxt = "n", axes = F)
axis(1, at = seq(0, 1, 0.1),
labels = seq(0, 1, 0.1))
axis(2, at = c(0, 0.1, 0.3, 0.5, 0.7),
labels = c("0", ".1", ".3", ".5", ".7"))
points(z.quantile[index],newz.p[index,1],pch=1,cex=1)
lines(z.quantile,newz.p[,2],type='l',lty=1,lwd=2)
points(z.quantile[index],newz.p[index,2],pch=2,cex=1)
lines(z.quantile,newz.p[,3],type='l',lty=1,lwd=2)
points(z.quantile[index],newz.p[index,3],pch=5,cex=1)
lines(z.quantile,newz.p[,4],type='l',lty=1,lwd=2)
points(z.quantile[index],newz.p[index,4],pch=6,cex=1)
legend("topleft",legend=Subgroup.name,lty=1,pch=c(1,2,5,6),cex=0.7)
dev.off()
setwd("C:/Users/Shuxi ZENG/Dropbox/Third Year/OCP_Revise/Code_Readme/OCP_LIV_JRSSA/Code")
load("Figure4.RData")
pdf("Pos_PS_confidence.pdf",width=8,height = 6)
F1=ecdf(PS_pos_mean[[1]])
plot(F1,
xlab = "Principal strata",
ylab = "Cumulativa distribution function")
abline(v=c(0,140),lty=2)
F2=ecdf(PS_pos_mean[[2]])
lines(F2,col="red")
F3=ecdf(PS_pos_mean[[3]])
lines(F3,col="blue",cex=0.1)
F4=ecdf(PS_pos_mean[[4]])
lines(F4,col="orange",cex=0.1)
legend("topleft",lty=1,col=c("black","red","blue","orange"),
legend=c("Rural females","Rural males","Urban females","Urban males"))
dev.off()
load("Figure4.RData")
pdf("Pos_PS_confidence.pdf",width=8,height = 6)
F1=ecdf(PS_pos_mean[[1]])
plot(F1,
xlab = "Principal strata",
ylab = "Cumulativa distribution function",
main="")
abline(v=c(0,140),lty=2)
F2=ecdf(PS_pos_mean[[2]])
lines(F2,col="red")
F3=ecdf(PS_pos_mean[[3]])
lines(F3,col="blue",cex=0.1)
F4=ecdf(PS_pos_mean[[4]])
lines(F4,col="orange",cex=0.1)
legend("topleft",lty=1,col=c("black","red","blue","orange"),
legend=c("Rural females","Rural males","Urban females","Urban males"))
dev.off()
load("Figure4.RData")
pdf("Pos_PS_confidence.pdf",width=8,height = 6)
F1=ecdf(PS_pos_mean[[1]])
plot(F1,
xlab = "Principal strata",
ylab = "Cumulativa distribution function",
main="")
abline(v=c(0,140),lty=2)
F2=ecdf(PS_pos_mean[[2]])
lines(F2,col="red")
F3=ecdf(PS_pos_mean[[3]])
lines(F3,col="blue",cex=0.1)
F4=ecdf(PS_pos_mean[[4]])
lines(F4,col="orange",cex=0.1)
legend("topleft",lty=1,col=c("black","red","blue","orange"),
legend=c("Rural females","Rural males","Urban females","Urban males"))
dev.off()
load("Figure4.RData")
pdf("Pos_PS_confidence.pdf",width=8,height = 6)
F1=ecdf(PS_pos_mean[[1]])
plot(F1,
xlab = "Principal strata",ylim=c(0,1),
ylab = "Cumulativa distribution function",
main="")
abline(v=c(0,140),lty=2)
F2=ecdf(PS_pos_mean[[2]])
lines(F2,col="red")
F3=ecdf(PS_pos_mean[[3]])
lines(F3,col="blue",cex=0.1)
F4=ecdf(PS_pos_mean[[4]])
lines(F4,col="orange",cex=0.1)
legend("topleft",lty=1,col=c("black","red","blue","orange"),
legend=c("Rural females","Rural males","Urban females","Urban males"))
dev.off()
load("Figure4.RData")
pdf("Pos_PS_confidence.pdf",width=8,height = 6)
F1=ecdf(PS_pos_mean[[1]])
plot(F1,
xlab = "Principal strata",ylim=c(0,1),
ylab = "Cumulativa distribution function",
main="")
abline(v=c(0,140),lty=2)
F2=ecdf(PS_pos_mean[[2]])
lines(F2,col="red")
F3=ecdf(PS_pos_mean[[3]])
lines(F3,col="blue",cex=0.1)
F4=ecdf(PS_pos_mean[[4]])
lines(F4,col="orange",cex=0.1)
legend("topleft",lty=1,col=c("black","red","blue","orange"),
legend=c("Rural females","Rural males","Urban females","Urban males"))
dev.off()
